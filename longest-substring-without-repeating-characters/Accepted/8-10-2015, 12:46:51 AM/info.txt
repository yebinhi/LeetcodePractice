{"id":35808317,"question_id":3,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439164011,"status":10,"status_display":"Accepted","runtime":"396 ms","url":"/submissions/detail/35808317/","is_pending":"Not Pending","title":"Longest Substring Without Repeating Characters","memory":"N/A","code":"public class Solution {\r\n    public int lengthOfLongestSubstring(String s) {\r\n        // Start typing your Java solution below  \r\n        // DO NOT write main() function  \r\n        int length = s.length();  \r\n        if (length == 0) {  \r\n            return 0;  \r\n        }  \r\n        int [] countTable = new int[256];  \r\n        Arrays.fill(countTable, -1);  \r\n        int max = 1;  \r\n        int start = 0;  \r\n        int end = 1;  \r\n          \r\n        countTable[s.charAt(0)] = 0;  \r\n        while (end < length) {  \r\n            //Has not reached a duplicate char  \r\n            if (countTable[s.charAt(end)] >= start) {  \r\n                start = countTable[s.charAt(end)] + 1;                \r\n            }  \r\n            max = Math.max(max, end - start + 1);  \r\n            countTable[s.charAt(end)] = end;  \r\n            end++;  \r\n        }  \r\n        return max;  \r\n    }\r\n}","compare_result":null,"title_slug":"longest-substring-without-repeating-characters","has_notes":false,"flag_type":1}