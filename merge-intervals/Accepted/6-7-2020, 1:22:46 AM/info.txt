{"id":350012451,"question_id":56,"lang":"java","lang_name":"Java","time":"3 years, 10 months","timestamp":1591489366,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/350012451/","is_pending":"Not Pending","title":"Merge Intervals","memory":"43.6 MB","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        int len = intervals.length;\n        if(len<=1) return intervals;\n        \n        Arrays.sort(intervals, (a,b)->a[0]-b[0]);\n        LinkedList<int[]> res = new LinkedList<>();\n        \n        for(int[] interval: intervals){\n            if(res.isEmpty() || res.getLast()[1] < interval[0]){\n                res.add(interval);\n            }else{\n                res.getLast()[1] = Math.max(res.getLast()[1], interval[1]);\n            }\n        }\n        \n        return res.toArray(new int[res.size()][]);\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}