{"id":410271290,"question_id":296,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1603035657,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/410271290/","is_pending":"Not Pending","title":"Best Meeting Point","memory":"N/A","code":"class Solution:\n    \n    def cal_distance(self, p_list, p):\n        d=0\n        for point in p_list:\n            d += abs(point[0]-p[0]) + abs(point[1]-p[1])\n            \n        return d\n        \n        \n    def minTotalDistance(self, grid: List[List[int]]) -> int:\n        # find all points\n        points =[]\n        for row in range(len(grid)):\n            for col in range(len(grid[0])):\n                if grid[row][col] == 1:\n                    points.append([row, col])\n        \n        # calculate all distance\n        distance =[]\n        for row in range(len(grid)):\n            for col in range(len(grid[0])):\n                distance.append(self.cal_distance(points, [row, col]))\n        \n        # return\n        return min(distance)","compare_result":"111111111111111111111111111111111111111111111111111111110","title_slug":"best-meeting-point","has_notes":false,"flag_type":1}