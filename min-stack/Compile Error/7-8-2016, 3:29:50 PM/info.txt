{"id":66523605,"question_id":155,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467988190,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/66523605/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack {\r\npublic:\r\n    stack<int> *s;\r\n    stack<int> *m;\r\n    /** initialize your data structure here. */\r\n    MinStack() {\r\n        s= new stack<int>();\r\n        m= new stack<int>();\r\n    }\r\n    \r\n    void push(int x) {\r\n        if(m->empty() || x<m->top()) m->push(x);\r\n        s.push(x);\r\n    }\r\n    \r\n    void pop() {\r\n        if(s.top()<= m->top()) m->pop();\r\n        s.pop();\r\n    }\r\n    \r\n    int top() {\r\n        return s->top();\r\n    }\r\n    \r\n    int getMin() {\r\n        return m->top();\r\n    }\r\n};\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * MinStack obj = new MinStack();\r\n * obj.push(x);\r\n * obj.pop();\r\n * int param_3 = obj.top();\r\n * int param_4 = obj.getMin();\r\n */","compare_result":null,"title_slug":"min-stack","has_notes":false,"flag_type":1}