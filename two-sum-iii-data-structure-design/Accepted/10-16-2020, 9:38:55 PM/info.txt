{"id":409577931,"question_id":170,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1602880735,"status":10,"status_display":"Accepted","runtime":"664 ms","url":"/submissions/detail/409577931/","is_pending":"Not Pending","title":"Two Sum III - Data structure design","memory":"20 MB","code":"class TwoSum:\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.nums=[]\n        self.is_sorted = False\n        \n\n    def add(self, number: int) -> None:\n        \"\"\"\n        Add the number to an internal data structure..\n        \"\"\"\n        self.nums.append(number)\n        self.is_sorted = False\n        \n\n    def find(self, value: int) -> bool:\n        \"\"\"\n        Find if there exists any pair of numbers which sum is equal to the value.\n        \"\"\"\n        if not self.is_sorted:\n            self.nums.sort()\n            self.is_sorted = True\n        low, high = 0, len(self.nums)-1\n        while low < high:\n            currSum = self.nums[low]+self.nums[high]\n            if currSum < value:\n                low += 1\n            elif  currSum > value:\n                high -= 1\n            else:\n                return True\n            \n        return False\n        \n\n\n# Your TwoSum object will be instantiated and called as such:\n# obj = TwoSum()\n# obj.add(number)\n# param_2 = obj.find(value)","compare_result":"11111111111111111","title_slug":"two-sum-iii-data-structure-design","has_notes":false,"flag_type":1}