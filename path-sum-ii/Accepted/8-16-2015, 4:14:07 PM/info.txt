{"id":36502229,"question_id":113,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439738047,"status":10,"status_display":"Accepted","runtime":"348 ms","url":"/submissions/detail/36502229/","is_pending":"Not Pending","title":"Path Sum II","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public List<List<Integer>> pathSum(TreeNode root, int sum) {\r\n        List<List<Integer>> result = new ArrayList<List<Integer>>();\r\n        if(root != null) helper(root, sum, result, new ArrayList<Integer>());\r\n        return result;\r\n    }\r\n    \r\n    private void helper(TreeNode root, int sum, List<List<Integer>> result, List<Integer> path){\r\n        if(root == null) return;\r\n        path.add(root.val);\r\n        \r\n        if(root.left == null && root.right == null && (sum-root.val) == 0){\r\n            List<Integer> copy = new ArrayList<Integer>(path);\r\n            result.add(copy);\r\n        }\r\n        \r\n        helper(root.left, sum-root.val, result, path);\r\n        helper(root.right, sum-root.val, result, path);\r\n        path.remove(path.size()-1);\r\n    }\r\n}","compare_result":null,"title_slug":"path-sum-ii","has_notes":false,"flag_type":1}