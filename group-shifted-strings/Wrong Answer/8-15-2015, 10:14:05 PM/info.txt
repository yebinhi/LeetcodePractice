{"id":36420381,"question_id":249,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439673245,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/36420381/","is_pending":"Not Pending","title":"Group Shifted Strings","memory":"N/A","code":"public class Solution {\r\n    public List<List<String>> groupStrings(String[] strings) {\r\n        List<List<String>> result = new ArrayList<List<String>>();\r\n        Map<Integer, List<String>> map = new HashMap<Integer, List<String>>();\r\n        for(int i =0; i<strings.length; i++){\r\n            int key = getKey(strings[i]);\r\n            if(map.containsKey(key)){\r\n                map.get(key).add(strings[i]);\r\n            }\r\n            List<String> tem = new ArrayList<String>();\r\n            tem.add(strings[i]);\r\n            map.put(key, tem);\r\n        }\r\n        for(int k : map.keySet()){\r\n            result.add(map.get(k));\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    private int getKey(String s){\r\n        int len = s.length();\r\n        if(len == 0) return -1;\r\n        if(len == 1) return 1;\r\n        int key =0;\r\n        for(int i =1; i<len; i++){\r\n            int temp = (int)(s.charAt(i)-s.charAt(i-1));\r\n            if(temp < 0){\r\n                temp +=26;\r\n            }\r\n            key += temp;\r\n        }\r\n        return key;\r\n    }\r\n}","compare_result":null,"title_slug":"group-shifted-strings","has_notes":false,"flag_type":1}