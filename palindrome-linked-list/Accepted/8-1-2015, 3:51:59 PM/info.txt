{"id":34922337,"question_id":234,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1438440719,"status":10,"status_display":"Accepted","runtime":"444 ms","url":"/submissions/detail/34922337/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public boolean isPalindrome(ListNode head) {\r\n        if(head == null || head.next==null)\r\n        return true;\r\n \r\n    //find list center\r\n    ListNode fast = head;\r\n    ListNode slow = head;\r\n \r\n    while(fast.next!=null && fast.next.next!=null){\r\n        fast = fast.next.next;\r\n        slow = slow.next;\r\n    }\r\n \r\n    ListNode secondHead = slow.next;\r\n    slow.next = null;\r\n \r\n    //reverse second part of the list\r\n    ListNode p1 = secondHead;\r\n    ListNode p2 = p1.next;\r\n \r\n    while(p1!=null && p2!=null){\r\n        ListNode temp = p2.next;\r\n        p2.next = p1;\r\n        p1 = p2;\r\n        p2 = temp;\r\n    }\r\n \r\n    secondHead.next = null;\r\n \r\n    //compare two sublists now\r\n    ListNode p = (p2==null?p1:p2);\r\n    ListNode q = head;\r\n    while(p!=null){\r\n        if(p.val != q.val)\r\n            return false;\r\n \r\n        p = p.next;\r\n        q = q.next;\r\n \r\n    }\r\n \r\n    return true;\r\n    }\r\n}","compare_result":null,"title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}