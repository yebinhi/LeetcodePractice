{"id":36661728,"question_id":95,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439850770,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/36661728/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public List<TreeNode> generateTrees(int n) {\r\n        return generateTrees(1, n);\r\n    }\r\n    \r\n    private List<TreeNode> generateTrees(int start, int end){\r\n        List<TreeNode> list = new LinkedList<>();\r\n        \r\n        if(start > end){\r\n            list.add(null);\r\n            return list;\r\n        }\r\n        \r\n        for(int i = start; i<=end; i++){\r\n            List<TreeNode> lefts = generateTrees(start, i-1);\r\n            List<TreeNode> rights = generateTrees(i+1, end);\r\n            for(TreeNode left : lefts){\r\n                for(TreeNode right : rights){\r\n                    Treenode node = new TreeNode(i);\r\n                    node.left = left;\r\n                    node.right = right;\r\n                    list.add(node);\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n}","compare_result":null,"title_slug":"unique-binary-search-trees-ii","has_notes":false,"flag_type":1}