{"id":35416347,"question_id":101,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1438825037,"status":10,"status_display":"Accepted","runtime":"352 ms","url":"/submissions/detail/35416347/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public boolean isSymmetric(TreeNode root) {\r\n       if(root == null){\r\n           return true;\r\n       } \r\n       return isSymmetric(root.left, root.right);\r\n    }\r\n    \r\n    public boolean isSymmetric(TreeNode left, TreeNode right){\r\n        if(left == null && right == null){\r\n            return true;\r\n        }else if(left == null || right == null){\r\n            return false;\r\n        }\r\n        if(left.val != right.val){\r\n            return false;\r\n        }\r\n       if(!isSymmetric(left.left, right.right)){\r\n           return false;\r\n           \r\n       }\r\n        if(!isSymmetric(left.right, right.left)){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}","compare_result":null,"title_slug":"symmetric-tree","has_notes":false,"flag_type":1}