{"id":36397895,"question_id":255,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439651917,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/36397895/","is_pending":"Not Pending","title":"Verify Preorder Sequence in Binary Search Tree","memory":"N/A","code":"public class Solution {\r\n    public boolean verifyPreorder(int[] preorder) {\r\n        if(preoder.length == 0){\r\n            return 0;\r\n        }\r\n        Stack<Integer> stack = new Stack<Integer>();\r\n        int low = Integer.MIN_VALUE;\r\n        for(int i =0; i<preoder.length; i++){\r\n            int p = preoder[i];\r\n            if(p<low){\r\n                return false;\r\n            }\r\n            while(!stack.isEmpty && p>stack.peek()){\r\n                low = path.pop();\r\n            }\r\n            push(p);\r\n        }\r\n    }\r\n}","compare_result":null,"title_slug":"verify-preorder-sequence-in-binary-search-tree","has_notes":false,"flag_type":1}