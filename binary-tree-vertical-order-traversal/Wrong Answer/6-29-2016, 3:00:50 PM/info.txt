{"id":65673858,"question_id":314,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467208850,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/65673858/","is_pending":"Not Pending","title":"Binary Tree Vertical Order Traversal","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    vector<vector<int>> verticalOrder(TreeNode* root) {\r\n        vector<vector<int>> res;\r\n        map<int, vector<int>> mymap;\r\n        dfs(root, 0, mymap);\r\n        for(auto col : mymap){\r\n            res.push_back(col.second);\r\n        }\r\n        return res;\r\n    }\r\n    void dfs(TreeNode* node, int col, map<int, vector<int>> &mymap){\r\n        if(node==NULL) return;\r\n        mymap[col].push_back(node->val);\r\n        dfs(node->left, col-1, mymap);\r\n        dfs(node->right, col+1, mymap);\r\n    }\r\n};","compare_result":null,"title_slug":"binary-tree-vertical-order-traversal","has_notes":false,"flag_type":1}