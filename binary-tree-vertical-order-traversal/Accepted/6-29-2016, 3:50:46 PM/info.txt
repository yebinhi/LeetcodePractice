{"id":65677063,"question_id":314,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467211846,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/65677063/","is_pending":"Not Pending","title":"Binary Tree Vertical Order Traversal","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    vector<vector<int>> verticalOrder(TreeNode* root) {\r\n        vector<vector<int>> res;\r\n        if(!root) return res;\r\n        queue<pair<int, TreeNode*>> myqueue;\r\n        map<int, vector<int>> mymap;\r\n        myqueue.push({0, root});\r\n        while(!myqueue.empty()){\r\n            auto a=myqueue.front(); myqueue.pop();\r\n            mymap[a.first].push_back(a.second->val);\r\n            if(a.second->left != NULL) myqueue.push({a.first-1, a.second->left});\r\n            if(a.second->right != NULL) myqueue.push({a.first+1, a.second->right});\r\n        }\r\n        \r\n        for(auto x : mymap){\r\n            res.push_back(x.second);\r\n        }\r\n        return res;\r\n        \r\n    }\r\n};","compare_result":null,"title_slug":"binary-tree-vertical-order-traversal","has_notes":false,"flag_type":1}