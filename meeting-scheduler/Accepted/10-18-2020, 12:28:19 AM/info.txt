{"id":409999090,"question_id":1165,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1602977299,"status":10,"status_display":"Accepted","runtime":"540 ms","url":"/submissions/detail/409999090/","is_pending":"Not Pending","title":"Meeting Scheduler","memory":"21.4 MB","code":"class Solution:\n    def minAvailableDuration(self, slots1: List[List[int]], slots2: List[List[int]], duration: int) -> List[int]:\n        q1 = deque(sorted(slots1, key = lambda x:x[0]))\n        q2 = deque(sorted(slots2, key = lambda x:x[0]))\n        \n        while q1 and q2:\n            s1, e1 =q1[0]\n            s2, e2 =q2[0]\n            if(s := max(s1, s2))+duration <= (e := min(e1, e2)):\n                return [s, s+duration]\n            if s1 < s2:\n                q1.popleft()\n            else:\n                q2.popleft()\n                \n        return []\n        ","compare_result":"111111111111111111","title_slug":"meeting-scheduler","has_notes":false,"flag_type":1}