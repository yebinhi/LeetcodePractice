{"id":65594938,"question_id":366,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467143725,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/65594938/","is_pending":"Not Pending","title":"Find Leaves of Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    vector<vector<int>> findLeaves(TreeNode* root) {\r\n        vector<vector<int>> res;\r\n        if(root == NULL) return res;\r\n        bottomUp(root, res);\r\n    }\r\n    int bottomUp(TreeNode* node, vector<vector<int>> res){\r\n        if(node == NULL) return 0;\r\n        \r\n        int idl=bottomUp(node->left, res);\r\n        int idr=bottomUp(node->right, res);\r\n        if(res[idl]==NULL){\r\n            res[idl]= new vector<int>();\r\n            res[idl].push_back(node->val);\r\n        }\r\n        res[idl].push_back(node->val);\r\n    }\r\n};","compare_result":null,"title_slug":"find-leaves-of-binary-tree","has_notes":false,"flag_type":1}