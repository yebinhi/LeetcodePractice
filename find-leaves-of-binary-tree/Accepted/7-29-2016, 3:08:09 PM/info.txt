{"id":68706013,"question_id":366,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1469801289,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/68706013/","is_pending":"Not Pending","title":"Find Leaves of Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    vector<vector<int>> findLeaves(TreeNode* root) {\r\n        vector<vector<int>> res;\r\n        bottomUp(root, res);\r\n        return res;\r\n    }\r\n    int bottomUp(TreeNode* node, vector<vector<int>>& res){\r\n        if(node == NULL) return 0;\r\n        \r\n        int idl=bottomUp(node->left, res);\r\n        int idr=bottomUp(node->right, res);\r\n        int id=max(idl, idr);\r\n        if(id == res.size()) res.push_back({});\r\n        res[id].push_back(node->val);\r\n        return id+1;\r\n    }\r\n};","compare_result":null,"title_slug":"find-leaves-of-binary-tree","has_notes":false,"flag_type":1}