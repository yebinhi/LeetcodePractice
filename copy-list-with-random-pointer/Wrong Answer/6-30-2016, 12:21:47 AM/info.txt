{"id":65710230,"question_id":138,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467242507,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/65710230/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"N/A","code":"/**\r\n * Definition for singly-linked list with a random pointer.\r\n * struct RandomListNode {\r\n *     int label;\r\n *     RandomListNode *next, *random;\r\n *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    RandomListNode *copyRandomList(RandomListNode *head) {\r\n        if(!head) return head;\r\n        \r\n        map<RandomListNode*, RandomListNode*> mymap;\r\n        RandomListNode* dummy = new RandomListNode(0), *dumcopy= dummy, *headcopy=head;\r\n        while(headcopy){\r\n            dumcopy->next= new RandomListNode(headcopy->label);\r\n            mymap[headcopy]=dumcopy->next;\r\n            dumcopy=dumcopy->next;\r\n            headcopy=headcopy->next;\r\n        }\r\n        dumcopy=dummy;\r\n        headcopy=head;\r\n        while(headcopy){\r\n            dumcopy->next->random=mymap[headcopy]->random;\r\n            dumcopy=dumcopy->next;\r\n            headcopy=headcopy->next;\r\n        }\r\n        return dummy->next;\r\n    }\r\n};","compare_result":null,"title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}