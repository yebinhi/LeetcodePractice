{"id":64620654,"question_id":138,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1466247958,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/64620654/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"N/A","code":"/**\r\n * Definition for singly-linked list with a random pointer.\r\n * struct RandomListNode {\r\n *     int label;\r\n *     RandomListNode *next, *random;\r\n *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    RandomListNode *copyRandomList(RandomListNode *head) {\r\n        if(!head) return head;\r\n        \r\n        RandomListNode *dummy=new RandomListNode(0), *p=head;\r\n        dummy->next=head;\r\n        while(p){\r\n            RandomListNode* next=p->next;\r\n            RandomListNode* node = new RandomListNode(p->label);\r\n            p->next=node;\r\n            node->next=next;\r\n            p=next;\r\n        }\r\n        p=head;\r\n        while(p){\r\n            p->next->random=(p->random == NULL)?NULL : p->random->next;\r\n            p=p->next->next;\r\n        }\r\n        p=head;\r\n        dummy=p->next;\r\n        while(p != NULL){\r\n            RanddomListNode *copy=p->next;\r\n            p->next=copy.next;\r\n            p=p->next;\r\n            copy->next=(p->next != NULL) ? p->next:NULL\r\n        }\r\n        return dummy;\r\n    }\r\n};","compare_result":null,"title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}