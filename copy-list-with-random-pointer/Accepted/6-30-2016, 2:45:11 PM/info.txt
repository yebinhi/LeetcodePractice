{"id":65772774,"question_id":138,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467294311,"status":10,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/65772774/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"N/A","code":"/**\r\n * Definition for singly-linked list with a random pointer.\r\n * struct RandomListNode {\r\n *     int label;\r\n *     RandomListNode *next, *random;\r\n *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    RandomListNode *copyRandomList(RandomListNode *head) {\r\n        if(!head) return head;\r\n        RandomListNode* dummy= new RandomListNode(0), *dcy=dummy, *hcy=head;\r\n        map<RandomListNode*, RandomListNode*> mymap;\r\n        while(hcy){\r\n            RandomListNode* node=new RandomListNode(hcy->label);\r\n            dcy->next=node;\r\n            mymap[hcy]=node;\r\n            hcy=hcy->next;\r\n            dcy=dcy->next;\r\n        }\r\n        dcy=dummy;\r\n        hcy=head;\r\n        while(hcy){\r\n            dcy->next->random = mymap[hcy->random];\r\n            dcy=dcy->next;\r\n            hcy=hcy->next;\r\n        }\r\n        return dummy->next;\r\n    }\r\n};","compare_result":null,"title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}