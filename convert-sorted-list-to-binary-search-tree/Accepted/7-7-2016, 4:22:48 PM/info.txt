{"id":66429156,"question_id":109,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467904968,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/66429156/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\n/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* list;\r\n    TreeNode* sortedListToBST(ListNode* head) {\r\n        if(!head) return NULL;\r\n        int count=0;\r\n        ListNode* cur=head;\r\n        list=head;\r\n        while(cur){\r\n            cur=cur->next;\r\n            count++;\r\n        }\r\n        return covert(0, count-1);\r\n        \r\n    }\r\n    \r\n    TreeNode* covert(int s, int e){\r\n        if(s>e) return NULL;\r\n        int mid=(s+e)/2;\r\n        \r\n        TreeNode* left=covert(s, mid-1);\r\n        TreeNode* parent=new TreeNode(list->val);\r\n        parent->left=left;\r\n        list=list->next;\r\n        TreeNode* right=covert(mid+1, e);\r\n        parent->right=right;\r\n        return parent;\r\n    }\r\n};","compare_result":null,"title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false,"flag_type":1}