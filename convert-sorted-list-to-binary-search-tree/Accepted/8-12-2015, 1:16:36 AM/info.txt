{"id":36015967,"question_id":109,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439338596,"status":10,"status_display":"Accepted","runtime":"380 ms","url":"/submissions/detail/36015967/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\n/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    private ListNode list;\r\n    public TreeNode sortedListToBST(ListNode head) {\r\n        if(head == null){\r\n            return null;\r\n        }\r\n        int n = 0;\r\n        ListNode p = head;\r\n        while(p != null){\r\n            p=p.next;\r\n            n++;\r\n        }\r\n        list = head;\r\n        return sortedListToBST(0, n-1);\r\n    }\r\n    private TreeNode sortedListToBST(int start, int end){\r\n        if(start > end){\r\n            return null;\r\n        }\r\n        int mid = (start+end)/2;\r\n        TreeNode leftChild = sortedListToBST(start, mid-1);\r\n        TreeNode parent = new TreeNode(list.val);\r\n        parent.left = leftChild;\r\n        list = list.next;\r\n        parent.right = sortedListToBST(mid+1, end);\r\n        return parent;\r\n    }\r\n}","compare_result":null,"title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false,"flag_type":1}