{"id":66816163,"question_id":109,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1468254609,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/66816163/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\n/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* listnode;\r\n    TreeNode* sortedListToBST(ListNode* head) {\r\n        if(!head) return NULL;\r\n        \r\n        ListNode* cur=head;\r\n        int count=0;\r\n        while(cur){\r\n            cur=cur->next;\r\n            count++;\r\n        }\r\n        listnode=head;\r\n        return dfs(0, count);\r\n    }\r\n    \r\n    TreeNode* dfs(int s, int e){\r\n        if(s>e) return NULL;\r\n        int mid=(s+e)/2;\r\n        TreeNode* l=dfs(s,mid-1);\r\n        TreeNode* parent= new TreeNode(listnode->val);\r\n        parent->left=l;\r\n        listnode=listnode->next;\r\n        TreeNode* r=dfs(mid,e);\r\n        parent->right=r;\r\n        return parent;\r\n    }\r\n};","compare_result":null,"title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false,"flag_type":1}