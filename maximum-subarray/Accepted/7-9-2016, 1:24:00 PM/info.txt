{"id":66601478,"question_id":53,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1468067040,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/66601478/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution {\r\npublic:\r\n    int maxSubArray(vector<int>& nums) {\r\n        int n=nums.size();\r\n        if(n<=0) return 0;\r\n        \r\n        int dp[n], maxSum;\r\n        dp[0]=maxSum=nums[0];\r\n        for(int i=1; i<n; i++){\r\n            dp[i]=max(nums[i]+dp[i-1], nums[i]);\r\n            maxSum=max(maxSum, dp[i]);\r\n        }\r\n        return maxSum;\r\n    }\r\n};","compare_result":null,"title_slug":"maximum-subarray","has_notes":false,"flag_type":1}