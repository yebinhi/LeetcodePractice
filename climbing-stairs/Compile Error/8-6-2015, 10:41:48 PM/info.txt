{"id":35510734,"question_id":70,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1438897308,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/35510734/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"N/A","code":"public class Solution {\r\n    public int climbStairs(int n) {\r\n        if(n == 0 || n == 1 || n ==2){\r\n            return n;\r\n        }\r\n        int ways[] = new ways[n+1];\r\n        ways[0]=0;\r\n        ways[1]=1;\r\n        ways[2]=2;\r\n        for(int i = 3; i<=n; i++){\r\n            ways[i]=ways[i-1]+wyas[i];\r\n        }\r\n        return ways[n];\r\n\r\n        \r\n    }\r\n}","compare_result":null,"title_slug":"climbing-stairs","has_notes":false,"flag_type":1}