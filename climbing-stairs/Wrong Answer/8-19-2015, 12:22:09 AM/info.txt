{"id":36792166,"question_id":70,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439940129,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/36792166/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"N/A","code":"public class Solution {\r\n    public int climbStairs(int n) {\r\n        if(n == 0){\r\n            return 0;\r\n        }\r\n        if(n == 1){\r\n            return 1;\r\n        }\r\n        \r\n        int dp[] = new int[n+1];\r\n        dp[0]=0;\r\n        dp[1]=1;\r\n        dp[2]=2;\r\n        for(int i =3; i < n; i++){\r\n            dp[i] = dp[i-1]+dp[i-2];\r\n        }\r\n        return dp[n];\r\n    }\r\n}","compare_result":null,"title_slug":"climbing-stairs","has_notes":false,"flag_type":1}