{"id":95165861,"question_id":167,"lang":"java","lang_name":"Java","time":"7 years, 1 month","timestamp":1488471548,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/95165861/","is_pending":"Not Pending","title":"Two Sum II - Input Array Is Sorted","memory":"N/A","code":"public class Solution {\r\n    public int[] twoSum(int[] numbers, int target) {\r\n        int len=numbers.length;\r\n        if(len<=1){\r\n            return new int[]{};\r\n        }\r\n        \r\n        for(int i=0; i<len; i++){\r\n            int key=target-numbers[i];\r\n            int index=bSearch(numbers, key, i+1);\r\n            if(index != -1) {\r\n                return new int[]{i+1, index+1};\r\n            }\r\n        }\r\n        throw new IllegalArgumentException(\"No two sum solution\");\r\n    }\r\n    \r\n    private int bSearch(int[] A, int key, int start){\r\n        int L=start, R=A.length-1;\r\n        int M=(L+R)/2;\r\n        while(L<R){\r\n            if(A[M]<key){ \r\n                L=M+1;\r\n            }else {\r\n                R=M;\r\n            }\r\n        }\r\n        return (L==R && A[L]==key)?L:-1;\r\n    }\r\n}","compare_result":null,"title_slug":"two-sum-ii-input-array-is-sorted","has_notes":false,"flag_type":1}