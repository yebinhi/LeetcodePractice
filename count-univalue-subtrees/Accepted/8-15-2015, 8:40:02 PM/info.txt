{"id":36413948,"question_id":250,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439667602,"status":10,"status_display":"Accepted","runtime":"376 ms","url":"/submissions/detail/36413948/","is_pending":"Not Pending","title":"Count Univalue Subtrees","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    int count = 0;\r\n    public int countUnivalSubtrees(TreeNode root) {\r\n       helper(root, 0);\r\n       return count;\r\n    }\r\n    private boolean helper(TreeNode root, int val){\r\n        if(root == null){\r\n            return true;\r\n        }\r\n        if(!helper(root.left, root.val) | !helper(root.right, root.val)){\r\n            return false;\r\n        }\r\n        count++;\r\n        return root.val == val;\r\n    }\r\n}","compare_result":null,"title_slug":"count-univalue-subtrees","has_notes":false,"flag_type":1}