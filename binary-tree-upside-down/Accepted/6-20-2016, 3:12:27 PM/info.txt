{"id":64809595,"question_id":156,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1466431947,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/64809595/","is_pending":"Not Pending","title":"Binary Tree Upside Down","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    TreeNode* upsideDownBinaryTree(TreeNode* root) {\r\n        if(root == NULL) return root;\r\n        \r\n        TreeNode *p=root, *parent=NULL, *parentRight=NULL;\r\n        while(p != NULL){\r\n            TreeNode* left = p->left;\r\n            p->left = parentRight;\r\n            parentRight = p->right;\r\n            p->right = parent;\r\n            parent = p;\r\n            p=left;\r\n        }\r\n        return parent;\r\n    }\r\n};","compare_result":null,"title_slug":"binary-tree-upside-down","has_notes":false,"flag_type":1}