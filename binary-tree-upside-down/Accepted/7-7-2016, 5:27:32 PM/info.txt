{"id":66433434,"question_id":156,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467908852,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/66433434/","is_pending":"Not Pending","title":"Binary Tree Upside Down","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    TreeNode* upsideDownBinaryTree(TreeNode* root) {\r\n        return dfs(root, NULL);\r\n    }\r\n    TreeNode* dfs(TreeNode* node, TreeNode* parent){\r\n        if(node== NULL) return parent;\r\n        TreeNode* root=dfs(node->left, node);\r\n        node->left=(parent==NULL) ? parent : parent->right;\r\n        node->right=parent;\r\n        return root;\r\n        \r\n    }\r\n};","compare_result":null,"title_slug":"binary-tree-upside-down","has_notes":false,"flag_type":1}