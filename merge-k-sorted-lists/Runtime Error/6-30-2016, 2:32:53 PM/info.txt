{"id":65772036,"question_id":23,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467293573,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/65772036/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    struct compNode{\r\n        bool operator()(ListNode* a, ListNode* b){\r\n            return a->val > b->val;\r\n        }\r\n    };\r\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\r\n        int n=lists.size();\r\n        if(n<=0) return NULL;\r\n        priority_queue<ListNode*, vector<ListNode*>, compNode> pq;\r\n        ListNode* dummy=new ListNode(0), *h=dummy;\r\n        \r\n        for(int i=0; i<n; i++){\r\n            pq.push(lists[i]);\r\n        }\r\n        \r\n        while(!pq.empty()){\r\n            ListNode* node=pq.top(); pq.pop();\r\n            h->next=node;\r\n            if(node->next) pq.push(node->next);\r\n            h=h->next;\r\n        }\r\n        return dummy->next;\r\n    }\r\n};","compare_result":null,"title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}