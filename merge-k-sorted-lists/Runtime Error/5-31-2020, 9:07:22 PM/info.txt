{"id":347261529,"question_id":23,"lang":"java","lang_name":"Java","time":"3 years, 11 months","timestamp":1590955642,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/347261529/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        if(lists == null) return null;\n        \n        PriorityQueue<ListNode> pq = new PriorityQueue<>((a, b) -> a.val-b.val);\n        ListNode parent = new ListNode();\n        ListNode current = parent;\n        for(ListNode node : lists){\n            pq.add(node);\n            ListNode cur = node.next;\n            while(cur != null){\n                pq.add(cur);\n                cur = cur.next;\n            }\n        }\n        \n        while(!pq.isEmpty()){\n            ListNode temp = pq.poll();\n            current.next = temp;\n            current = temp;\n        }\n        return parent.next;\n    }\n}","compare_result":"11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}