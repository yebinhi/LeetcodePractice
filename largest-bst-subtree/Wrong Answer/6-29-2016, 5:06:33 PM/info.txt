{"id":65681935,"question_id":333,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467216393,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/65681935/","is_pending":"Not Pending","title":"Largest BST Subtree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int maxNum=0;\r\n    int largestBSTSubtree(TreeNode* root) {\r\n        return getSize(root);\r\n    }\r\n    int getSize(TreeNode* node){\r\n        if(!node) return 0;\r\n        int l=getSize(node->left);\r\n        int r=getSize(node->right);\r\n        if(maxNum<(l+r+1)) maxNum=l+r+1;\r\n        return max(l, r)+1;\r\n    }\r\n};","compare_result":null,"title_slug":"largest-bst-subtree","has_notes":false,"flag_type":1}