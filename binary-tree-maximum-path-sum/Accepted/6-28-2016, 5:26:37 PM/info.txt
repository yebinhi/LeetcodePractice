{"id":65581439,"question_id":124,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467131197,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/65581439/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int maxsum;\r\n    int maxPathSum(TreeNode* root) {\r\n        if(root == NULL) return 0;\r\n        maxsum=INT_MIN;\r\n        maxSum(root);\r\n        return maxsum;\r\n        \r\n    }\r\n    int maxSum(TreeNode*node){\r\n        if(node == NULL) return 0;\r\n        int left=maxSum(node->left);\r\n        int right=maxSum(node->right);\r\n        maxsum=max(node->val+left+right, maxsum);\r\n        int res=node->val + max(left, right);\r\n        return res<0? 0:res;\r\n    }\r\n};","compare_result":null,"title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}