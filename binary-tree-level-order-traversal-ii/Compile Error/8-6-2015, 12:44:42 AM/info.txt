{"id":35407793,"question_id":107,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1438818282,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/35407793/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public List<List<Integer>> levelOrderBottom(TreeNode root) {\r\n        ArrayList<ArrayList<Integer>> result = new  ArrayList<ArrayList<Integer>>();\r\n \r\n    if(root == null){\r\n        return result;\r\n    }\r\n \r\n    LinkedList<TreeNode> current = new LinkedList<TreeNode>();\r\n    LinkedList<TreeNode> next = new LinkedList<TreeNode>();\r\n    current.offer(root);\r\n \r\n    ArrayList<Integer> numberList = new ArrayList<Integer>();\r\n \r\n    // need to track when each level starts\r\n    while(!current.isEmpty()){\r\n        TreeNode head = current.poll();\r\n \r\n        numberList.add(head.val);\r\n \r\n        if(head.left != null){\r\n            next.offer(head.left);\r\n        }\r\n        if(head.right!= null){\r\n            next.offer(head.right);\r\n        }\r\n \r\n        if(current.isEmpty()){\r\n            current = next;\r\n            next = new LinkedList<TreeNode>();\r\n            result.add(numberList);\r\n            numberList = new ArrayList<Integer>();\r\n        }\r\n    }\r\n \r\n    //return Collections.reverse(result);\r\n    ArrayList<ArrayList<Integer>> reversedResult = new  ArrayList<ArrayList<Integer>>();\r\n    for(int i=result.size()-1; i>=0; i--){\r\n        reversedResult.add(result.get(i));\r\n    }\r\n \r\n    return reversedResult;\r\n    }\r\n}","compare_result":null,"title_slug":"binary-tree-level-order-traversal-ii","has_notes":false,"flag_type":1}