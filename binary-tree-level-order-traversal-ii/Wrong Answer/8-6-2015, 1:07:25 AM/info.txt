{"id":35409361,"question_id":107,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1438819645,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/35409361/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public List<List<Integer>> levelOrderBottom(TreeNode root) {\r\n        List<List<Integer>> result = new ArrayList<List<Integer>>();\r\n        if(root == null){\r\n            return result;\r\n        }\r\n        \r\n        LinkedList<TreeNode> current = new LinkedList<TreeNode>();\r\n        LinkedList<TreeNode> next = new LinkedList<TreeNode>();\r\n        List<Integer> numbers = new ArrayList<Integer>();\r\n        current.offer(root);\r\n        while(!current.isEmpty()){\r\n            TreeNode node = current.poll();\r\n            numbers.add(node.val);\r\n            if(node.left != null){\r\n                next.offer(node.left);\r\n            }\r\n            if(node.right != null){\r\n                next.offer(node.right);\r\n            }\r\n            if(current.isEmpty()){\r\n                current = next;\r\n                result.add(numbers);\r\n                numbers = new ArrayList<Integer>();\r\n                next = new LinkedList<TreeNode>();\r\n            }\r\n        }\r\n        List<List<Integer>> reverseResult = new ArrayList<List<Integer>>();\r\n        for(int i =0; i<result.size(); i++){\r\n            reverseResult.add(result.get(i));\r\n        }\r\n        return reverseResult;\r\n    }\r\n}","compare_result":null,"title_slug":"binary-tree-level-order-traversal-ii","has_notes":false,"flag_type":1}