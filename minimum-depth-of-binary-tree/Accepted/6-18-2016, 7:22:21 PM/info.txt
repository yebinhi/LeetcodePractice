{"id":64639756,"question_id":111,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1466274141,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/64639756/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int minDepth(TreeNode* root) {\r\n        if(root == NULL) return 0;\r\n        \r\n        queue<TreeNode*> q;\r\n        TreeNode* rightMost=root;\r\n        q.push(root);\r\n        int depth =1;\r\n        while(!q.empty()){\r\n            TreeNode *node = q.front();\r\n            q.pop();\r\n            if(node->left == NULL && node->right == NULL) break;\r\n            if(node->left != 0) q.push(node->left);\r\n            if(node->right != 0) q.push(node->right);\r\n            if(node == rightMost){\r\n                depth++;\r\n                if(node->right != NULL){\r\n                    rightMost=node->right;\r\n                }else if(node->left != NULL){\r\n                    rightMost = node->left;\r\n                }\r\n                \r\n            }\r\n        }\r\n        return depth;\r\n    }\r\n};","compare_result":null,"title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}