{"id":35470564,"question_id":111,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1438863620,"status":10,"status_display":"Accepted","runtime":"364 ms","url":"/submissions/detail/35470564/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public int minDepth(TreeNode root) {\r\n        if(root ==null){\r\n       return 0;\r\n   }\r\n   if(root.left ==null&&root.right == null){\r\n       return 1;\r\n   }\r\n   if(root.left ==null){\r\n       return 1+minDepth(root.right);\r\n   }\r\n   if(root.right ==null){\r\n       return 1+minDepth(root.left);\r\n   }\r\n   int left = 1+minDepth(root.left);\r\n   int right =1+ minDepth(root.right);\r\n   return left<right?left:right;\r\n    }\r\n}","compare_result":null,"title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}