{"id":65574292,"question_id":111,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467124793,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/65574292/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int minDepth(TreeNode* root) {\r\n        return minDepthHelper(root);\r\n    }\r\n    int minDepthHelper(TreeNode* node){\r\n        if(node == NULL) return 0;\r\n        if(node->right == NULL) return minDepthHelper(node->left)+1;\r\n        if(node->left == NULL) return minDepthHelper(node->right)+1;\r\n        return min(minDepthHelper(node->left), minDepthHelper(node->right))+1;\r\n    }\r\n};","compare_result":null,"title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}