{"id":34930230,"question_id":232,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1438448182,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/34930230/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"N/A","code":"class MyQueue {\r\n    Stack<Integer> stack1 = new Stack<Integer>();\r\n    Stack<Integer> stack2 = new Stack<Integer>();\r\n    // Push element x to the back of queue.\r\n    public void push(int x) {\r\n        stack1.push(x);\r\n    }\r\n\r\n    // Removes the element from in front of queue.\r\n    public void pop() {\r\n        if(stack2.isEmpty()){\r\n            while(!stack1.isEmpty){\r\n                stack2.push(stack1.pop());\r\n            }\r\n        }\r\n        stack2.pop();\r\n    }\r\n\r\n    // Get the front element.\r\n    public int peek() {\r\n         if(stack2.isEmpty()){\r\n            while(!stack1.isEmpty){\r\n                stack2.push(stack1.pop());\r\n            }\r\n        }\r\n        stack2.peek();\r\n        \r\n    }\r\n\r\n    // Return whether the queue is empty.\r\n    public boolean empty() {\r\n        if(stack1.isEmpty() && stack2.isEmpty){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}","compare_result":null,"title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}