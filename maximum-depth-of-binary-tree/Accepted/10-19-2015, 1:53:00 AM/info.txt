{"id":43381555,"question_id":104,"lang":"cpp","lang_name":"C++","time":"8 years, 6 months","timestamp":1445215980,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/43381555/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int maxDepth(TreeNode* root) {\r\n        if(root == NULL) return 0;\r\n        queue<TreeNode*> q;\r\n        int level(0), count(0);\r\n        q.push(root);\r\n        count=1;\r\n        TreeNode* tmp;\r\n        while(!q.empty()){\r\n            level++;\r\n            int tcount(0);\r\n            for(int i=0; i<count; i++){\r\n                tmp = q.front(); q.pop();\r\n                if(tmp->left != NULL){ q.push(tmp->left); tcount++;}\r\n                if(tmp->right != NULL){ q.push(tmp->right); tcount++;}\r\n            }\r\n            count = tcount;\r\n        }\r\n        return level;\r\n    }\r\n};","compare_result":null,"title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}