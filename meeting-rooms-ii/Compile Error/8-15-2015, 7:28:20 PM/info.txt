{"id":36409185,"question_id":253,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439663300,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/36409185/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"N/A","code":"/**\r\n * Definition for an interval.\r\n * public class Interval {\r\n *     int start;\r\n *     int end;\r\n *     Interval() { start = 0; end = 0; }\r\n *     Interval(int s, int e) { start = s; end = e; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public int minMeetingRooms(Interval[] intervals) {\r\n        if(intervals == null || intervals.length == 0){\r\n            return 0;\r\n        }\r\n        \r\n        Arrays.sort(intervals, new Comparator<Interval>(){\r\n            public int compare(Interval a, Interval b){\r\n                if(a.start == b.start){\r\n                    return b.end-a.end;\r\n                }\r\n                return a.start - b.start;\r\n            }\r\n        });\r\n        ArrayList<Interval> count = new ArrayList<Interval>();\r\n        outer:for(int i = 1; i<intervals.length; i++){\r\n            if(count.size > 0){\r\n                int len = count.size();\r\n                for(int j =0; j<len; j++){\r\n                    if(intervals[i].start <= count[j].end){\r\n                        count[j]=intervals[i];\r\n                        continue outer;\r\n                    }\r\n                }\r\n            }\r\n            count.add(intervals[i]);\r\n        }\r\n        return count.size();    \r\n    }\r\n}","compare_result":null,"title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}