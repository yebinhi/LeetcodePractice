{"id":409651537,"question_id":253,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1602899316,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/409651537/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"N/A","code":"class Solution:\n    def minMeetingRooms(self, intervals: List[List[int]]) -> int:\n        sorted_intervals = sorted(intervals, key = lambda x:x[0])\n        free_rooms = []\n        heappush(free_rooms, sorted_intervals[0][1])\n        \n        for meeting in sorted_intervals[1:]:\n            if(free_rooms[0] < meeting[0]):\n                heappop(free_rooms)\n            heappush(free_rooms, meeting[1])\n        return len(free_rooms)\n        ","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}