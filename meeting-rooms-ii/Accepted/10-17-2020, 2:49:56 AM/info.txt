{"id":409651795,"question_id":253,"lang":"python3","lang_name":"Python3","time":"3 years, 6 months","timestamp":1602899396,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/409651795/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"17.2 MB","code":"class Solution:\n    def minMeetingRooms(self, intervals: List[List[int]]) -> int:\n        if not intervals:\n            return 0\n        \n        sorted_intervals = sorted(intervals, key = lambda x:x[0])\n        free_rooms = []\n        heappush(free_rooms, sorted_intervals[0][1])\n        \n        for meeting in sorted_intervals[1:]:\n            if(free_rooms[0] <= meeting[0]):\n                heappop(free_rooms)\n            heappush(free_rooms, meeting[1])\n            \n        return len(free_rooms)\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}