{"id":344983553,"question_id":253,"lang":"java","lang_name":"Java","time":"3 years, 11 months","timestamp":1590506033,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/344983553/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"39.6 MB","code":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n        if(intervals.length <=0) return 0;\n        \n        //sort the array\n        Arrays.sort(intervals, \n                   new Comparator<int[]>(){\n                    public int compare(int[] a, int[] b){\n                        return a[0] - b[0];\n                    }\n                });\n        \n        // min heap\n        PriorityQueue<Integer> allocator = \n            new PriorityQueue<Integer>(\n                intervals.length,\n                new Comparator<Integer>(){\n                    public int compare(Integer a, Integer b){\n                        return a-b;\n                    }\n                });\n        allocator.add(intervals[0][1]);\n        for(int i=1; i<intervals.length; i++){\n            if(intervals[i][0] >= allocator.peek()){\n                allocator.poll();\n            }\n            \n            allocator.add(intervals[i][1]);\n        }\n        return allocator.size();\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}