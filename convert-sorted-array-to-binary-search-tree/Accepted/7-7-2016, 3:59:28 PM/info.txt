{"id":66427524,"question_id":108,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467903568,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/66427524/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\r\n        int n=nums.size();\r\n        return covert(nums, 0, n-1);\r\n    }\r\n    TreeNode* covert(vector<int>& nums, int s, int e){\r\n        if(s>e) return NULL;\r\n        int mid=(s+e)/2;\r\n        TreeNode* node= new TreeNode(nums[mid]);\r\n        node->left=covert(nums, s, mid-1);\r\n        node->right=covert(nums, mid+1, e);\r\n        return node;\r\n    }\r\n\r\n};","compare_result":null,"title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}