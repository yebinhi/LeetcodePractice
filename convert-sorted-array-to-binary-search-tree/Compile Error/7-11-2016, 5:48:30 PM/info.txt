{"id":66817157,"question_id":108,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1468255710,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/66817157/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\r\n        int n=nums.size();\r\n        if(n<=0) return NULL;\r\n        return dfs(nums,0, n-1);\r\n    }\r\n    \r\n    TreeNode* dfs(vector<int>& nums, int s, int e){\r\n        if(s>e) return NULL;\r\n        int mid=(s+e)/2;\r\n        TreeNode* root= new TreeNode(nums[mid]);\r\n        root->left=dfs(s, mid-1);\r\n        root->right=dfs(mid+1, e);\r\n        return root;\r\n        \r\n    }\r\n};","compare_result":null,"title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}