{"id":36805589,"question_id":148,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439948883,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/36805589/","is_pending":"Not Pending","title":"Sort List","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode sortList(ListNode head) {\r\n        \r\n        if(head == null || head.next == null){\r\n            return head;\r\n        }\r\n        ListNode fast = head;\r\n        ListNode slow = head;\r\n        ListNode left = head;\r\n        while(fast.next.next != null && slow.next != null){\r\n            fast = fast.next.next;\r\n            slow = slow.next;\r\n        }\r\n        ListNode right = slow.next;\r\n        \r\n        ListNode first = null, second = null;\r\n        if(left != right){\r\n            first = sortList(left);\r\n            second = sortList(right);\r\n        }\r\n        return merge(first, second);\r\n    }\r\n    \r\n    private ListNode merge(ListNode first, ListNode second){\r\n        if(first == null){\r\n            return second;\r\n        }\r\n        if(second == null){\r\n            return first;\r\n        }\r\n        ListNode fake = new ListNode(-1);\r\n        ListNode p = fake;\r\n        while(first != null && second !=null){\r\n            if(first.val < second.val){\r\n                p.next = first;\r\n                first = first.next;\r\n                p = p.next;\r\n            }else if(first.val == second.val){\r\n                p.next = first;\r\n                p.next.next = second;\r\n                first = first.next;\r\n                second = second.next;\r\n                p=p.next.next;\r\n            }else{\r\n                p.next = second;\r\n                second = second.next;\r\n                p=p.next;\r\n            }\r\n        }\r\n        if(first != null){\r\n            p.next = first;\r\n        }\r\n        if(second != null){\r\n            p.next = second;\r\n        }\r\n        return fake.next;\r\n    }\r\n}","compare_result":null,"title_slug":"sort-list","has_notes":false,"flag_type":1}