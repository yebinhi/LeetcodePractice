{"id":65869315,"question_id":63,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467388735,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/65869315/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"class Solution {\r\npublic:\r\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\r\n        int m=obstacleGrid.size();\r\n        if(m<=0) return 0;\r\n        int n=obstacleGrid[0].size();\r\n        if(n<=0) return 0;\r\n        int num[m][n];\r\n        num[0][0]=1;\r\n        for(int i=1; i<m; i++){\r\n            if(obstacleGrid[i][0] == 1)\r\n                num[i][0]=0;\r\n            else \r\n                num[i][0]=num[i-1][0];\r\n        }\r\n        \r\n        for(int i=1; i<n; i++){\r\n            if(obstacleGrid[0][i] == 1) \r\n                num[0][i]=0;\r\n            else \r\n                num[0][i]=num[0][i-1];\r\n        }\r\n        \r\n        for(int i=1; i<m; i++){\r\n            for(int j=1; j<n; j++){\r\n                if(obstacleGrid[i][j]==1)\r\n                    num[i][j]=0;\r\n                else \r\n                    num[i][j]=num[i-1][j]+num[i][j-1];\r\n            }\r\n        }\r\n        return num[m-1][n-1];\r\n    }\r\n};","compare_result":null,"title_slug":"unique-paths-ii","has_notes":false,"flag_type":1}