{"id":36610359,"question_id":96,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439813462,"status":10,"status_display":"Accepted","runtime":"216 ms","url":"/submissions/detail/36610359/","is_pending":"Not Pending","title":"Unique Binary Search Trees","memory":"N/A","code":"public class Solution {\r\n    public int numTrees(int n) {\r\n        int[] count = new int[n + 1];\r\n \r\n\tcount[0] = 1;\r\n\tcount[1] = 1;\r\n \r\n\tfor (int i = 2; i <= n; i++) {\r\n\t\tfor (int j = 0; j <= i - 1; j++) {\r\n\t\t\tcount[i] = count[i] + count[j] * count[i - j - 1];\r\n\t\t}\r\n\t}\r\n \r\n\treturn count[n];\r\n    }\r\n}","compare_result":null,"title_slug":"unique-binary-search-trees","has_notes":false,"flag_type":1}