{"id":256912986,"question_id":837,"lang":"java","lang_name":"Java","time":"4 years, 7 months","timestamp":1567380658,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/256912986/","is_pending":"Not Pending","title":"Most Common Word","memory":"N/A","code":"class Solution {\n    public String mostCommonWord(String paragraph, String[] banned) {\n        Map<String, Integer> map = new HashMap<>();\n        String[] strList = paragraph.split(\" \");\n        Set<String> bannedSet = new HashSet<>();\n        \n        for(String str: banned){\n            bannedSet.add(str);\n        }\n        \n        \n        for(int i=0; i<strList.length; i++){\n            String temp = trim(strList[i]);\n            if(!bannedSet.contains(temp) && temp != \"\"){\n                if(map.containsKey(temp)){\n                    map.put(temp, map.get(temp)+1);\n                }else{\n                    map.put(temp, 1);\n                }\n            }\n        }\n        String result=null;\n        int max = 0;\n        for(Map.Entry me : map.entrySet()){\n            if((Integer)me.getValue() > max){\n                result = (String)me.getKey();\n                max = (Integer)me.getValue();\n            }\n        }\n        return result;\n        \n    }\n    \n    private String trim(String str){\n        int s=0, e=str.length()-1;\n        while(!Character.isLetter(str.charAt(s))) s++;\n        while(!Character.isLetter(str.charAt(e))) e--;\n        return str.substring(s,e+1).toLowerCase();\n    }\n    \n}","compare_result":"11111011111111111111111111111111111111111111111","title_slug":"most-common-word","has_notes":false,"flag_type":1}