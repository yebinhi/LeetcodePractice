{"id":66016131,"question_id":94,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467555458,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/66016131/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    vector<int> inorderTraversal(TreeNode* root) {\r\n        vector<int> res;\r\n        if(!root) return res;\r\n        \r\n        dfs(root, res);\r\n        return res;\r\n        \r\n    }\r\n    void dfs(TreeNode* root, vector<int>& res){\r\n        if(!root) return;\r\n        \r\n        dfs(root->left, res);\r\n        res.push_back(root->val);\r\n        dfs(root->right, res);\r\n    }\r\n};","compare_result":null,"title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}