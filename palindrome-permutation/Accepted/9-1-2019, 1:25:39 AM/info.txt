{"id":256620045,"question_id":266,"lang":"java","lang_name":"Java","time":"4 years, 7 months","timestamp":1567297539,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/256620045/","is_pending":"Not Pending","title":"Palindrome Permutation","memory":"33.8 MB","code":"class Solution {\n    public boolean canPermutePalindrome(String s) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(int i=0; i<s.length(); i++){\n            if(map.containsKey(s.charAt(i))){\n                map.put(s.charAt(i), map.get(s.charAt(i))+1);\n            }else{\n                map.put(s.charAt(i), 1);\n            }\n        }\n        int odd=0;\n        for(Map.Entry mapElement : map.entrySet()){\n            int i = (int)mapElement.getValue();\n            if(i%2!=0){\n                odd++;\n            }\n        }\n        return odd>1 ? false:true;\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"palindrome-permutation","has_notes":false,"flag_type":1}