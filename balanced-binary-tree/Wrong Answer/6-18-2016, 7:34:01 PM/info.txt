{"id":64640445,"question_id":110,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1466274841,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/64640445/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    bool isBalanced(TreeNode* root) {\r\n        if(root==NULL) return true;\r\n        int left = isBalanced(root->left);\r\n        int right = isBalanced(root->right);\r\n        return abs(left-right)<=1;\r\n    }\r\n    int subTreeLength(TreeNode* node){\r\n        if(node == NULL) return 0;\r\n        \r\n        return max(subTreeLength(node->left), subTreeLength(node->right))+1;\r\n    }\r\n};","compare_result":null,"title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}