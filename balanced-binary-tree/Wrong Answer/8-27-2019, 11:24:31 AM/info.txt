{"id":255302052,"question_id":110,"lang":"java","lang_name":"Java","time":"4 years, 8 months","timestamp":1566901471,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/255302052/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isBalanced(TreeNode root) {\n        if (root == null) return true;\n        int l = getDepth(root.left);\n        int r = getDepth(root.right);\n        \n        return Math.abs(l-r) < 2;\n        \n    }\n    \n    private int getDepth(TreeNode node){\n        if(node == null) return 0;\n        int l = getDepth(node.left);\n        int r = getDepth(node.right);\n        return Math.max(l, r)+1;\n    }\n}","compare_result":"11111111111011011110011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110010000100000011000011111111111111111111111111111111111111111111111111111111111111111000001111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}