{"id":66427019,"question_id":110,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467903141,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/66427019/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    bool isBalanced(TreeNode* root) {\r\n        int i=maxDepth(root);\r\n        return i!=-1;\r\n    }\r\n    int maxDepth(TreeNode* node){\r\n        if(node==NULL) return 0;\r\n        int L= maxDepth(node->left);\r\n        if(L==-1) return -1;\r\n        int R=maxDepth(node->right);\r\n        if(R==-1 return -1;\r\n        \r\n        return bas(L-R) >1 ? -1 : max(L+R)+1;\r\n    }\r\n};","compare_result":null,"title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}