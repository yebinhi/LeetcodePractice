{"id":35393678,"question_id":110,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1438806000,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/35393678/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public boolean isBalanced(TreeNode root) {\r\n        if(root == null){\r\n            return true;\r\n        }\r\n        int heighDiff = maxDepth(root.left) - maxDepth(root.right);\r\n        if(Math.abs(heighDiff) > 1){\r\n            return false;\r\n        }else{\r\n            return isBalance(root.left) && isBalanced(root.right)\r\n        }\r\n    }\r\n    \r\n    public int maxDepth(TreeNode node){\r\n        if(node == null){\r\n            return 0;\r\n        }\r\n        return 1 + Math.max(maxDepth(node.left), maxDepth(node.right));\r\n    }\r\n   \r\n}","compare_result":null,"title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}