{"id":65575089,"question_id":110,"lang":"cpp","lang_name":"C++","time":"7 years, 10 months","timestamp":1467125450,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/65575089/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    bool isBalanced(TreeNode* root) {\r\n        return isBalancedHelper(root)!= -1;\r\n    }\r\n    int isBalancedHelper(TreeNode* n){\r\n        if(==NULL) return 0;\r\n        int l=isBalancedHelper(n->left);\r\n        if(l==-1) return -1;\r\n        int r=isBalancedHelper(n->right);\r\n        if(r== -1) return -1;\r\n        return abs(l-r)>1 ? -1 : max(l, r);\r\n    }\r\n};","compare_result":null,"title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}