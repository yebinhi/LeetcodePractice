{"id":64641999,"question_id":110,"lang":"cpp","lang_name":"C++","time":"7Â years, 10Â months","timestamp":1466276263,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/64641999/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    bool isBalanced(TreeNode* root) {\r\n        return isSubTreeBalanced(root) != -1;\r\n    }\r\n    int isSubTreeBalanced(TreeNode* node){\r\n        if(node == NULL) return 0;\r\n        int l = isSubTreeBalanced(node->left);\r\n        if(l==-1) return -1;\r\n        int r = isSubTreeBalanced(node->right);\r\n        if(r == -1) return -1;\r\n        return abs(l-r)<=1 ? max(l,r)+1 : -1;\r\n    }\r\n};","compare_result":null,"title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}