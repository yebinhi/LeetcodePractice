{"id":44062455,"question_id":110,"lang":"cpp","lang_name":"C++","time":"8 years, 6 months","timestamp":1445811408,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/44062455/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    bool isBalanced(TreeNode* root) {\r\n        return findDepth(root)==-1?false:true;\r\n    }\r\n    int findDepth(TreeNode* node){\r\n        if(!node) return 0;\r\n        int L = findDepth(node->left);\r\n        if(L==-1){\r\n            return -1;\r\n        }\r\n        int R = findDepth(node->right);\r\n        if(R==-1){\r\n            return -1;\r\n        }\r\n        if(abs(L-R)>1) return -1;\r\n        return max(L, R)+1;\r\n    }\r\n};","compare_result":null,"title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}