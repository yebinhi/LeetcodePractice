{"id":36012589,"question_id":110,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439335839,"status":10,"status_display":"Accepted","runtime":"380 ms","url":"/submissions/detail/36012589/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public boolean isBalanced(TreeNode root) {\r\n        return maxDepth(root) != -1;\r\n    }\r\n    public int maxDepth(TreeNode root){\r\n        if(root == null){\r\n            return 0;\r\n        }\r\n        int L = maxDepth(root.left);\r\n        if(L == -1){\r\n            return -1;\r\n        }\r\n        int R = maxDepth(root.right);\r\n        if(R == -1){\r\n            return -1;\r\n        }\r\n        return Math.abs(L-R) <= 1 ? Math.max(L, R)+1 : -1;\r\n    }\r\n}","compare_result":null,"title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}