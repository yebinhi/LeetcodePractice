{"id":36496263,"question_id":257,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439733502,"status":10,"status_display":"Accepted","runtime":"340 ms","url":"/submissions/detail/36496263/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public List<String> binaryTreePaths(TreeNode root) {\r\n        List<String> result = new ArrayList<String>();\r\n        if(root != null) helper(root, result, \"\");\r\n        return result;\r\n    }\r\n    private List<String> helper(TreeNode root, List<String> result, String path){\r\n        if(root.left == null && root.right == null){\r\n            result.add(path+root.val);\r\n            return result;\r\n        }\r\n        if(root.left != null) helper(root.left, result, path +root.val+\"->\");\r\n        if(root.right != null) helper(root.right, result, path +root.val+\"->\");\r\n        return result;\r\n    }\r\n}","compare_result":null,"title_slug":"binary-tree-paths","has_notes":false,"flag_type":1}