{"id":66100775,"question_id":25,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467631013,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/66100775/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode *reverseKGroup(ListNode *head, int k) {\r\n        ListNode tmphead(0);\r\n        ListNode *p = head, *tail = &tmphead;\r\n        while(p)\r\n        {\r\n            ListNode *groupHead = p;\r\n            int i = 1;\r\n            for(i = 1; i < k && p->next != NULL; i++)p = p->next;\r\n            if(i != k){tail->next = groupHead; return tmphead.next;}\r\n            p = p->next;\r\n            pair<ListNode*, ListNode*>ht = reverseList(groupHead, p);\r\n            tail->next = ht.first;\r\n            tail = ht.second;\r\n        }\r\n        return tmphead.next;\r\n    }\r\n\r\n    pair<ListNode*, ListNode*> reverseList(ListNode* head, ListNode *end)\r\n    {\r\n        ListNode *p = head, *newHead = NULL;\r\n        while(p != end)\r\n        {\r\n            ListNode *tmp = p->next;\r\n            p->next = newHead;\r\n            newHead = p;\r\n            p = tmp;\r\n        }\r\n        return make_pair(newHead, head);\r\n    }\r\n};","compare_result":null,"title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}