{"id":66114972,"question_id":25,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467645759,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/66114972/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* reverseKGroup(ListNode* head, int k) {\r\n        if(!head) return NULL;\r\n        \r\n        ListNode dummyHead(0), *cur=head, *tail=&dummyHead;\r\n        \r\n        while(cur){\r\n            ListNode* grouphead=cur;\r\n            int i=1;\r\n            for(i=1; i<k && cur->next != NULL; i++) cur=cur->next;\r\n            if(i<k){\r\n                tail->next = grouphead;\r\n                return dummyHead.next;\r\n            }\r\n            pair<ListNode*, ListNode*> ht = reverse(grouphead, cur);\r\n            tail->next=ht.first;\r\n            tail=ht.second;\r\n        }\r\n        return dummyHead.next;\r\n    }\r\n    \r\n    pair<ListNode*, ListNode*> reverse(ListNode* s, ListNode* e){\r\n        ListNode* cur=s, *news=NULL;\r\n        \r\n        while(cur != e){\r\n            ListNode* tmp=cur->next;\r\n            cur->next=news;\r\n            news=cur;\r\n            cur=tmp;\r\n        }\r\n        return make_pair(news, s);\r\n    }\r\n};","compare_result":null,"title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}