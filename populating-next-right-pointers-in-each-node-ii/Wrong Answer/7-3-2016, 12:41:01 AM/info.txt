{"id":65967413,"question_id":117,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467502861,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/65967413/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node II","memory":"N/A","code":"/**\r\n * Definition for binary tree with next pointer.\r\n * struct TreeLinkNode {\r\n *  int val;\r\n *  TreeLinkNode *left, *right, *next;\r\n *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    void connect(TreeLinkNode *root) {\r\n        if(!root) return;\r\n        TreeLinkNode* rightMost=root, *prev= NULL;\r\n        queue<TreeLinkNode*> q;\r\n        q.push(root);\r\n        while(!q.empty()){\r\n            TreeLinkNode* node= q.front(); q.pop();\r\n            if(prev != NULL && prev != rightMost){\r\n                prev->next=node;\r\n            }\r\n            else if(prev == rightMost){\r\n                prev->next= NULL;\r\n                rightMost= (prev->right != NULL) ? prev->right : prev->left;\r\n            }\r\n            prev=node;\r\n            if(node->left) q.push(node->left);\r\n            if(node->right) q.push(node->right);\r\n        }\r\n    }\r\n};","compare_result":null,"title_slug":"populating-next-right-pointers-in-each-node-ii","has_notes":false,"flag_type":1}