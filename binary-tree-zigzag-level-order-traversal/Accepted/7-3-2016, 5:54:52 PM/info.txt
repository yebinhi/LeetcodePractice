{"id":66024173,"question_id":103,"lang":"cpp","lang_name":"C++","time":"7 years, 9 months","timestamp":1467564892,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/66024173/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\r\n        vector<vector<int>> res;\r\n        if(!root) return res;\r\n        \r\n        stack<TreeNode*> *currlevel = new stack<TreeNode*>();\r\n        stack<TreeNode*> *nextlevel = new stack<TreeNode*>();\r\n        bool left2right=true;\r\n        currlevel->push(root);\r\n        \r\n        while(!currlevel->empty()){\r\n            vector<int> vals;\r\n            while(!currlevel->empty()){\r\n                TreeNode* curr=currlevel->top(); currlevel->pop();\r\n                vals.push_back(curr->val);\r\n                \r\n                if(left2right){\r\n                    if(curr->left) nextlevel->push(curr->left);\r\n                    if(curr->right) nextlevel->push(curr->right);\r\n                }else{\r\n                    if(curr->right) nextlevel->push(curr->right);\r\n                    if(curr->left) nextlevel->push(curr->left);\r\n                }\r\n            }\r\n            res.push_back(vals);\r\n            stack<TreeNode*> *temp = currlevel;\r\n            currlevel=nextlevel;\r\n            nextlevel=temp;\r\n            left2right= !left2right;\r\n        }\r\n        return res;\r\n    }\r\n};","compare_result":null,"title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}