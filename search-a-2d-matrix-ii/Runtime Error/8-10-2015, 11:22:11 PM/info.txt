{"id":35914066,"question_id":240,"lang":"java","lang_name":"Java","time":"8 years, 8 months","timestamp":1439245331,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/35914066/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"N/A","code":"public class Solution {\r\n    public boolean searchMatrix(int[][] matrix, int target) {\r\n        if(matrix == null || matrix.length == 0 || matrix[0].length == 0){\r\n            return false;\r\n        }\r\n        int n = matrix.length;\r\n        int m = matrix[0].length;\r\n        \r\n        int start = 0;\r\n        int end = n*m-1;\r\n        while(start < end){\r\n            int mid = (start+end)/2;\r\n            int midx = mid/n;\r\n            int midy = mid%n;\r\n            if(matrix[midx][midy] == target){\r\n                return true;\r\n            }\r\n            if(matrix[midx][midy] < target){\r\n                start = mid+1;\r\n            }\r\n            if(matrix[midx][midy] > target){\r\n                end = mid-1;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","compare_result":null,"title_slug":"search-a-2d-matrix-ii","has_notes":false,"flag_type":1}